package org.firstinspires.ftc.teamcode.path;

import android.location.Location;

/*
Defines a path of gps coordinates that spell out DPRG as a continuous path
situated at Northhaven park's softball field
 */
public class dprgpath implements NavPath {

    private int index = -1;
    private boolean forward = true;
    private boolean done = false;

    double[] points = {-96.84847300000001,32.902793,-96.84846999999999,32.902791,-96.84846400000001,32.902787,-96.84846,32.902785,-96.848457,32.902784,-96.84845100000001,32.902782,-96.84844699999999,32.902781,-96.84844200000001,32.90278,-96.848437,32.90278,-96.84843200000002,32.902781,-96.84842674613243,32.90278235209724,-96.848422,32.902784,-96.84841748232037,32.90278663291146,-96.8484145822178,32.90278934019047,-96.8484116003894,32.90279199882229,-96.8484087240714,32.90279482336507,-96.848405,32.902799,-96.84840199999999,32.902803,-96.84840012055315,32.90280598494471,-96.848399,32.902809,-96.84839821298981,32.90281201006889,-96.84839799999999,32.902815,-96.84839799999999,32.90282,-96.84839870536253,32.90282307647509,-96.8484,32.902826,-96.84840199999999,32.90283,-96.84840554886131,32.90283403137664,-96.84841000000002,32.902838,-96.84841299999999,32.90284,-96.84841699999998,32.902843,-96.84842300000001,32.902846,-96.848429,32.902849,-96.84843499999999,32.902852,-96.84844699999999,32.902838,-96.84846,32.902823,-96.84847300000001,32.902809,-96.84848600000001,32.902794,-96.84846899999999,32.902783,-96.84845100000001,32.902772,-96.848433,32.90276,-96.848415,32.902749,-96.84840199999999,32.902764,-96.848389,32.902778,-96.84837599999999,32.902793,-96.84836299999999,32.902807,-96.84835851249593,32.90280516968974,-96.84835399999999,32.902803,-96.84835,32.902801,-96.8483462254791,32.90279837765928,-96.848343,32.902796,-96.84833999999999,32.902792,-96.84833787062746,32.9027876649474,-96.84833697559357,32.9027850450853,-96.848337,32.902782,-96.84833800000001,32.902778,-96.848339,32.902775,-96.8483404006564,32.90277264809708,-96.84834268876338,32.9027701837437,-96.84834552830537,32.90276804762836,-96.848349,32.902766,-96.84835200000001,32.902765,-96.848355,32.902764,-96.84836000000001,32.902764,-96.84836511794677,32.90276422900789,-96.848371,32.902766,-96.848375,32.902768,-96.84837900000001,32.90277,-96.84838194920054,32.90277250850763,-96.84838433293861,32.90277410134372,-96.848386,32.902776,-96.84838800000001,32.902778,-96.84838999999999,32.90278,-96.848403,32.902765,-96.848416,32.902751,-96.84840199999999,32.902742,-96.84838800000001,32.902733,-96.84837299999998,32.902724,-96.848359,32.902715,-96.84834600000001,32.902729,-96.848333,32.902743,-96.84832,32.902758,-96.84830700000001,32.902772,-96.84830399999998,32.90277,-96.84829999999999,32.902768,-96.848296,32.902766,-96.848292,32.902764,-96.84828899999999,32.902762,-96.84828559704283,32.90275907393176,-96.848283,32.902756,-96.84828199999998,32.902754,-96.84828100000001,32.902752,-96.84828,32.90275,-96.84828,32.902747,-96.84828100000001,32.902744,-96.84828208122198,32.90274174009023,-96.84828339878032,32.90273904833412,-96.84828580294696,32.90273620121759,-96.84828899320057,32.90273355463059,-96.848292,32.902732,-96.84829535468849,32.9027309240052,-96.848299,32.902731,-96.84830100000001,32.902731,-96.84830599999999,32.902732,-96.84830999999998,32.902733,-96.84831299999999,32.902734,-96.84831600000001,32.902735,-96.84832299999998,32.902739,-96.84833,32.902743,-96.84832400000001,32.902739,-96.84831800000001,32.902735,-96.84831600000001,32.902733,-96.84831299999999,32.902731,-96.84831200000002,32.90273,-96.84830999999998,32.902727,-96.84830999999998,32.902724,-96.848309,32.902721,-96.848309,32.902719,-96.84830999999998,32.902717,-96.84831113991044,32.9027141162038,-96.84831266941249,32.90271155060381,-96.848314,32.902709,-96.84831560505097,32.90270581120175,-96.84831699999999,32.902703,-96.84831899999999,32.902699,-96.84832036282177,32.90269527390672,-96.848321,32.902693,-96.848321,32.90269,-96.848321,32.902689,-96.848305,32.902679,-96.84829499999999,32.902691,-96.848285,32.902703,-96.848283,32.902706,-96.84827858664569,32.90271151500735,-96.84827500000002,32.902715,-96.84827,32.902719,-96.848265,32.902722,-96.848263,32.902723,-96.848257,32.902725,-96.848254,32.902726,-96.84825000000001,32.902726,-96.84824516521907,32.9027263397122,-96.84824079602514,32.9027257737548,-96.84823780499609,32.90272501074928,-96.84823465449084,32.90272389846533,-96.84823100000001,32.902723,-96.84822638328578,32.90272113701537,-96.8482229138244,32.90271932617208,-96.84822,32.902718,-96.84821700000001,32.902716,-96.848215,32.902715,-96.848214,32.902714,-96.84820999999999,32.902711,-96.848208,32.902708,-96.84821100000001,32.902711,-96.848215,32.902714,-96.84821800000002,32.902716,-96.84822,32.902717,-96.848224,32.902719,-96.84822878228094,32.90272116609039,-96.84823469662049,32.90272366919256,-96.84824000000002,32.902725,-96.8482429934143,32.90272568282396,-96.848248,32.902726,-96.848251,32.902726,-96.848254,32.902725,-96.848259,32.902724,-96.84826099999999,32.902723,-96.848264,32.902722,-96.84826899999999,32.902719,-96.84827200000001,32.902717,-96.848274,32.902715,-96.84827799999999,32.902711,-96.84828,32.902709,-96.848283,32.902705,-96.848285,32.9027,-96.848287,32.902696,-96.84828799999998,32.902692,-96.84828799999998,32.902688,-96.848287,32.902684,-96.848285,32.90268,-96.84828400000002,32.902677,-96.84828100000001,32.902673,-96.848277,32.90267,-96.84827300000001,32.902666,-96.84826899999999,32.902664,-96.848264,32.902661,-96.848259,32.902659,-96.84825499999999,32.902658,-96.848251,32.902657,-96.848246,32.902663,-96.848241,32.902668,-96.848236,32.902674,-96.84823100000001,32.90268,-96.84823900000001,32.902685,-96.84824699999999,32.90269};
    int character = 0;
    Location loc = new Location("");

    @Override
    public int getChar(){return character;}
    @Override
    public void setChar(int character){this.character=character;}
    @Override
    public int getindex(){return index;}

    @Override
    public Location getNext(){
                index++;
                loc.setLongitude(points[index*2]);
                loc.setLatitude(points[index*2+1]);
                if ((index+1) * 2 == points.length){
                    index = -1;
                    character = 0;
                    done = true;
                }
                return loc;
    }

    @Override
    public boolean isDone() {
        return done;
    }

}


